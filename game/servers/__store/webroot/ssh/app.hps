
load_translation('tr/${lang}.json');

register('ssh', {
  legend   : tr('Connect to a distant server'),
  arguments: [
    {
      _       : 'IP',
      legend  : tr('Server\'s IP'),
      required: true,
      regex   : !save.data.hacker ? RegexCollection.IP : '.*'
    },
    {
      _       : 'username',
      legend  : tr('User name'),
      required: true,
      regex   : '([a-zA-Z0-9_\-]+)'
    },
    {
      _       : 'password',
      legend  : tr('User password'),
      required: true
    }
  ],
  callback : function(IP, username, password) {
    if(!servers.hasOwnProperty(IP))
      return display_error(tr('This server doesn\'t exist'));

    var sys = servers[IP].readJSON('.sys/server.sys');

    if(!sys || sys.ssh === false)
      return display_error(tr('Server refused the SSH connection'));

    if(!sys.users.hasOwnProperty(username))
      return display_error(tr('Server said : Wrong login, user "${name}" doesn\'t exist', [username]));

    if(sys.users[username].password != password)
      return display_error(tr('Server said : Wrong password'));

    updateServer(IP, username);
    serverLogged.push([IP, username]);
  }
});
