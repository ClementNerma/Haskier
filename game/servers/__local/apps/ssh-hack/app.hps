
register('ssh-hack', {
  legend   : 'Hacker un serveur',
  async    : true,
  arguments: [
    {
      _       : 'IP',
      legend  : 'Adresse IP du serveur',
      required: true,
      regex   : RegexCollection.IP
    }
  ],
  callback : function(IP,resolve) {
    display('Recherche du serveur...');

    $setTimeout(function() {
      if(!servers.hasOwnProperty(IP))
        return resolve('${red:Le serveur demandé n\'existe pas}');

      display('Tentative de connexion...');

      $setTimeout(function() {
        var s = servers[IP];

        if(!s.network('hypernet'))
          return resolve('${red:Le serveur demandé n\'est pas connecté à ${hypernet}}');

        if(!s.allowSSH())
          return resolve('${red:Le serveur n\'accepte pas les requêtes SSH}');

        if(s.secure('outside'))
          return resolve('${red:Le serveur demandé possède trop de protections pour être atteint}');

        if(!s.hasUser('das-ssh') && !s.hasUser('guest'))
          return resolve('${red:Le serveur ne contient pas des données susceptibles d\'êtres récupérées}');

        display('Récupération des informations...');

        $setTimeout(function() {
          display('=== Identifiant ===');
          display('Utilisateur  : ' + (s.hasUser('das-ssh') ? 'das-ssh' : 'guest'));
          display('Mot de passe : ' + (s.user('das-ssh') || s.user('guest')).password);
          resolve('======= Fin =======');
        }, 3000 * (!fastdev));
      }, 4000 * (!fastdev));
    }, 1000 * (!fastdev));
  }
});
